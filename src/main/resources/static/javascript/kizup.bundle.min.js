(()=>{"use strict";var t,e,n={332:function(t,e){var n=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))((function(s,r){function i(t){try{u(o.next(t))}catch(t){r(t)}}function a(t){try{u(o.throw(t))}catch(t){r(t)}}function u(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,a)}u((o=o.apply(t,e||[])).next())}))},o=this&&this.__generator||function(t,e){var n,o,s,r,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return r={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function a(a){return function(u){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;r&&(r=0,a[0]&&(i=0)),i;)try{if(n=1,o&&(s=2&a[0]?o.return:a[0]?o.throw||((s=o.return)&&s.call(o),0):o.next)&&!(s=s.call(o,a[1])).done)return s;switch(o=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,o=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=e.call(t,i)}catch(t){a=[6,t],o=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}};Object.defineProperty(e,"__esModule",{value:!0}),e.UpdateUser=void 0;var s=function(){function t(){}return t.userName=function(t,e){return n(this,void 0,void 0,(function(){var n,s;return o(this,(function(o){switch(o.label){case 0:return[4,e.patch("/user/name",{name:t})];case 1:return[4,(n=o.sent()).json()];case 2:return s=o.sent(),[2,{res:n,json:s,status:n.status}]}}))}))},t.email=function(t,e,s){return n(this,void 0,void 0,(function(){var n,r;return o(this,(function(o){switch(o.label){case 0:return[4,s.patch("/user/email",{email:t,password:e})];case 1:return[4,(n=o.sent()).json()];case 2:return r=o.sent(),[2,{res:n,json:r,status:n.status}]}}))}))},t.password=function(t,e,s){return n(this,void 0,void 0,(function(){var n,r;return o(this,(function(o){switch(o.label){case 0:return[4,s.patch("/user/password",{password:e,newPassword:t})];case 1:return[4,(n=o.sent()).json()];case 2:return r=o.sent(),[2,{res:n,json:r,status:n.status}]}}))}))},t}();e.UpdateUser=s},484:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.CSS_DEFAULT_TRANSITION_TIME=e.CSS_CLASS_SHAKE_ANIM=e.CSS_CLASS_INPUT_DANGER=void 0;var o,s=n(834);e.CSS_CLASS_INPUT_DANGER="input-danger",e.CSS_CLASS_SHAKE_ANIM="element-animated-by-shake",e.CSS_DEFAULT_TRANSITION_TIME=!(o=s.WWWROOT.dataset.defaultTransition)||isNaN(Number(o))?(console.error("WWWROOT is not defining the default CSS transition data"),400):Number(o)},834:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.WWWROOT=void 0,e.WWWROOT=document.getElementById("wwwroot")},646:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SYSTEM_STORAGE_KEY_TOKEN=void 0,e.SYSTEM_STORAGE_KEY_TOKEN="@key::System_Token"},349:function(t,e,n){var o=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))((function(s,r){function i(t){try{u(o.next(t))}catch(t){r(t)}}function a(t){try{u(o.throw(t))}catch(t){r(t)}}function u(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,a)}u((o=o.apply(t,e||[])).next())}))},s=this&&this.__generator||function(t,e){var n,o,s,r,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return r={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function a(a){return function(u){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;r&&(r=0,a[0]&&(i=0)),i;)try{if(n=1,o&&(s=2&a[0]?o.return:a[0]?o.throw||((s=o.return)&&s.call(o),0):o.next)&&!(s=s.call(o,a[1])).done)return s;switch(o=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,o=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=e.call(t,i)}catch(t){a=[6,t],o=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}};Object.defineProperty(e,"__esModule",{value:!0}),e.LoggedUserPageModule=void 0;var r=n(332),i=n(484),a=n(754),u=n(922),c=n(431),d=n(593),l=n(339),p=n(578),h=function(){function t(){this.anim=new a.AnimTool,this.validation=new p.UserEntityValidation,this.progress=new c.ProgressIndicatorTool,this.api=new d.RestApiTool,this.toaster=new l.ToasterTool,this.avatar={tool:new u.ImageTool,HTMLImage:document.getElementById("avatar-IMG"),input:document.getElementById("avatar-hidden-input"),chooseButton:document.getElementById("choose-avatar-button"),blob:null},this.password={pseudoInput:document.getElementById("pseudo-input-password"),formContainer:document.querySelector(".form-user-password-container"),formContainerData:["",""],form:document.querySelector(".form-user-password"),input:document.getElementById("new-password"),inputConfirm:document.getElementById("new-password-again"),inputCurrentPassword:document.getElementById("current-password"),hiddenPassword:document.getElementById("hidden-password"),showPassword:document.getElementById("show-password")},this.signOutButton=document.getElementById("sign-out-button");var t=document.getElementById("pseudo-input-name"),e=document.querySelector(".form-user-container"),n=e.querySelector(".form-user-name"),o=n.querySelector("input"),s=[document.getElementById("user-name-strong")];this.name={pseudoInput:t,pseudoInputSpan:t.querySelector("span"),formContainer:e,formContainerData:["",""],form:n,input:o,originalValue:o.dataset.original,updateOn:s},this.name.updateOn.push(this.name.pseudoInputSpan);var r=document.getElementById("pseudo-input-email"),i=document.querySelector(".form-user-email-container"),h=i.querySelector(".form-user-email"),f=h.querySelector("input"),m=h.querySelector('input[type="password"]');this.email={pseudoInput:r,pseudoInputSpan:r.querySelector("span"),formContainer:i,formContainerData:["",""],form:h,input:f,originalValue:f.dataset.original,updateOn:[],passwordInput:m},this.email.updateOn.push(this.email.pseudoInputSpan)}return t.prototype.run=function(){this.processFormContainerDataset(),this.setListeners(),this.processBodySize(),this.processPassword(),this.progress.generate()},t.prototype.processFormContainerDataset=function(){this.name.formContainerData=this.name.formContainer.dataset.originalPos.split("."),this.email.formContainerData=this.email.formContainer.dataset.originalPos.split("."),this.password.formContainerData=this.password.formContainer.dataset.originalPos.split(".")},t.prototype.setListeners=function(){var t=this;this.avatar.chooseButton.addEventListener("click",(function(){return t.avatar.input.click()})),this.avatar.input.addEventListener("input",(function(){return t.avatarProcessing()})),this.name.pseudoInput.addEventListener("click",(function(){return t.activeUserInputConfiguration(t.name)})),this.name.form.addEventListener("submit",(function(e){e.preventDefault(),t.updateName()})),this.name.input.addEventListener("input",(function(){t.validation.nameIsValid(t.name.input.value)?t.name.input.classList.remove(i.CSS_CLASS_INPUT_DANGER):t.name.input.classList.add(i.CSS_CLASS_INPUT_DANGER)})),this.name.form.querySelector(".button-danger").addEventListener("click",(function(){t.name.input.value=t.name.originalValue,t.disableUserInputConfiguration(t.name)})),this.email.pseudoInput.addEventListener("click",(function(){return t.activeUserInputConfiguration(t.email)})),this.email.form.addEventListener("submit",(function(e){e.preventDefault(),t.updateEmail()})),this.email.input.addEventListener("input",(function(){t.validation.emailIsValid(t.email.input.value)?t.email.input.classList.remove(i.CSS_CLASS_INPUT_DANGER):t.email.input.classList.add(i.CSS_CLASS_INPUT_DANGER)})),this.email.passwordInput.addEventListener("input",(function(){t.validation.passwordIsValid(t.email.passwordInput.value)?t.email.passwordInput.classList.remove(i.CSS_CLASS_INPUT_DANGER):t.email.passwordInput.classList.add(i.CSS_CLASS_INPUT_DANGER)})),this.email.form.querySelector(".button-danger").addEventListener("click",(function(){t.email.input.value=t.email.originalValue,t.disableUserInputConfiguration(t.email)})),this.signOutButton.addEventListener("click",(function(){return t.signOut()}))},t.prototype.processPassword=function(){var t=this;this.password.showPassword.addEventListener("click",(function(){t.password.showPassword.classList.add("d-none"),t.password.hiddenPassword.classList.remove("d-none"),t.password.input.type="text",t.password.inputConfirm.type="text",t.password.inputCurrentPassword.type="text"})),this.password.hiddenPassword.addEventListener("click",(function(){t.password.showPassword.classList.remove("d-none"),t.password.hiddenPassword.classList.add("d-none"),t.password.input.type="password",t.password.inputConfirm.type="password",t.password.inputCurrentPassword.type="password"})),this.password.pseudoInput.addEventListener("click",(function(){return t.activeUserInputPasswordConfiguration()})),this.password.form.querySelector(".button-danger").addEventListener("click",(function(){var e=t.password.formContainerData,n=e[0],o=e[1];t.password.formContainer.style[n]=o})),this.password.form.addEventListener("submit",(function(e){e.preventDefault(),t.updatePassword()})),this.password.input.addEventListener("input",(function(){if(t.validation.passwordIsValid(t.password.input.value)){if(t.password.input.value!==t.password.inputConfirm.value)return t.password.input.classList.add(i.CSS_CLASS_INPUT_DANGER),void t.password.inputConfirm.classList.add(i.CSS_CLASS_INPUT_DANGER);t.password.input.classList.remove(i.CSS_CLASS_INPUT_DANGER),t.password.inputConfirm.classList.remove(i.CSS_CLASS_INPUT_DANGER),t.password.input.classList.remove(i.CSS_CLASS_INPUT_DANGER)}else t.password.input.classList.add(i.CSS_CLASS_INPUT_DANGER)})),this.password.inputConfirm.addEventListener("input",(function(){if(t.validation.passwordIsValid(t.password.inputConfirm.value)){if(t.password.input.value!==t.password.inputConfirm.value)return t.password.input.classList.add(i.CSS_CLASS_INPUT_DANGER),void t.password.inputConfirm.classList.add(i.CSS_CLASS_INPUT_DANGER);t.password.input.classList.remove(i.CSS_CLASS_INPUT_DANGER),t.password.inputConfirm.classList.remove(i.CSS_CLASS_INPUT_DANGER),t.password.inputConfirm.classList.remove(i.CSS_CLASS_INPUT_DANGER)}else t.password.inputConfirm.classList.add(i.CSS_CLASS_INPUT_DANGER)})),this.password.inputCurrentPassword.addEventListener("input",(function(){t.validation.passwordIsValid(t.password.inputCurrentPassword.value)?t.password.inputCurrentPassword.classList.remove(i.CSS_CLASS_INPUT_DANGER):t.password.inputCurrentPassword.classList.add(i.CSS_CLASS_INPUT_DANGER)}))},t.prototype.activeUserInputConfiguration=function(t){t.pseudoInput.style.borderColor="var(--secondary)",t.pseudoInputSpan.style.color="var(--title)";var e=t.formContainerData[0];t.formContainer.style[e]="0",setTimeout((function(){t.pseudoInput.style.borderColor="",t.pseudoInputSpan.style.color=""}),500)},t.prototype.disableUserInputConfiguration=function(t){var e=t.formContainerData,n=e[0],o=e[1];t.formContainer.style[n]=o},t.prototype.activeUserInputPasswordConfiguration=function(){var t=this.password.formContainerData[0];this.password.formContainer.style[t]="0"},t.prototype.avatarProcessing=function(){return o(this,void 0,void 0,(function(){var t;return s(this,(function(e){switch(e.label){case 0:return this.avatar.input.files&&this.avatar.input.files[0]?[4,this.avatar.tool.imageToBlob(this.avatar.input.files[0])]:[3,2];case 1:(t=e.sent())&&(this.avatar.blob=t,this.avatar.HTMLImage.src=URL.createObjectURL(t)),e.label=2;case 2:return[2]}}))}))},t.prototype.processBodySize=function(){var t=document.querySelector(".header").clientHeight;document.querySelector("#user-body").style.minHeight="calc(100vh - ".concat(t,"px)")},t.prototype.updateName=function(){var t=this,e=this.name.input.value;if(!this.validation.nameIsValid(e))return this.toaster.warn(this.name.input.dataset.error),void this.anim.shake(this.name.input);r.UpdateUser.userName(e,this.api).then((function(n){var o=n.json;200===n.status?(t.toaster.success(o.message),t.name.updateOn.forEach((function(t){return t.textContent=e})),t.disableUserInputConfiguration(t.name)):t.toaster.warn(o.error)})).catch((function(e){t.toaster.danger(),console.log(e)}))},t.prototype.updateEmail=function(){var t=this,e=this.email.input.value;if(!this.validation.emailIsValid(e))return this.toaster.warn(this.email.input.dataset.error),void this.anim.shake(this.email.input);var n=this.email.passwordInput.value;if(!this.validation.passwordIsValid(n))return this.toaster.warn(this.email.passwordInput.dataset.error),void this.anim.shake(this.email.passwordInput);r.UpdateUser.email(e,n,this.api).then((function(n){var o=n.json;if(200===n.status){var s=o.token;d.RestApiTool.updateToken(s),t.toaster.success(o.message),t.email.updateOn.forEach((function(t){return t.textContent=e})),t.disableUserInputConfiguration(t.email)}else t.toaster.warn(o.error)})).catch((function(e){t.toaster.danger(),console.log(e)}))},t.prototype.updatePassword=function(){var t=this,e=this.password.input.value;if(e!==this.password.inputConfirm.value)return this.anim.shake(this.password.inputConfirm),this.toaster.warn(this.password.inputConfirm.dataset.error),void console.log({newPassword:e,again:this.password.inputConfirm.value});if(!this.validation.passwordIsValid(e))return this.anim.shake(this.password.input),void this.toaster.warn(this.password.input.dataset.error);var n=this.password.inputCurrentPassword.value;if(!this.validation.passwordIsValid(n))return this.anim.shake(this.password.inputCurrentPassword),void this.toaster.warn(this.password.inputCurrentPassword.dataset.error);r.UpdateUser.password(e,n,this.api).then((function(e){var n=e.json;200===e.status?(t.toaster.success(n.message),t.password.form.querySelector(".button-danger").click(),t.password.input.value="",t.password.inputConfirm.value="",t.password.inputCurrentPassword.value=""):(t.toaster.warn(n.error),console.log(n))})).catch((function(e){t.toaster.danger(),console.log(e)}))},t.prototype.signOut=function(){var t=this;this.progress.show(),this.api.signOut().then((function(e){e?t.toaster.success(t.signOutButton.dataset.message,(function(){return window.location.reload()})):t.toaster.danger("Oopss..."),t.progress.hidden()})).catch((function(e){console.log(e),t.toaster.danger("Oopss..."),t.progress.hidden()}))},t}();e.LoggedUserPageModule=h},251:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SessionModule=void 0;var o=n(484),s=n(754),r=n(431),i=n(593),a=n(339),u=n(578),c=function(){function t(){this.HTML_SESSION_TYPE={signIn:"SIGN_IN",signUp:"SIGN_UP"},this.validation=new u.UserEntityValidation,this.anim=new s.AnimTool,this.api=new i.RestApiTool,this.toaster=new a.ToasterTool,this.progressIndicator=new r.ProgressIndicatorTool,this.buttonShowSessionForm=document.querySelector("#show-session-form"),this.buttonHiddenSessionForm=document.querySelector("#session-form-hidden"),this.showSessionFormFromBody=document.querySelector("#container-view-call-session-form"),this.homeLink=document.querySelector("#home-link"),this.sessionFormContainer=document.querySelector("#session-form"),this.sessionForm=this.sessionFormContainer.querySelector("form"),this.sessionEmailInput=this.sessionForm.querySelector("#session-email"),this.sessionPasswordInput=this.sessionForm.querySelector("#session-password"),this.buttonSessionSignUp=this.sessionForm.querySelector("#sign-up"),this.buttonSessionSignIn=this.sessionForm.querySelector('button[type="submit"]')}return t.prototype.run=function(){this.setListeners(),this.progressIndicator.generate(),console.log(this)},t.prototype.showSessionForm=function(){this.sessionFormContainer.style.left="0"},t.prototype.setListeners=function(){var t=this;this.buttonShowSessionForm.addEventListener("click",(function(){return t.showSessionForm()})),this.buttonHiddenSessionForm.addEventListener("click",(function(){return t.hiddenSessionForm()})),this.showSessionFormFromBody&&this.homeLink&&(this.showSessionFormFromBody.addEventListener("click",(function(){return t.showSessionForm()})),this.homeLink.addEventListener("click",(function(t){t.preventDefault(),window.history.back()}))),this.sessionEmailInput.addEventListener("input",(function(){t.validation.emailIsValid(t.sessionEmailInput.value)?t.sessionEmailInput.classList.remove(o.CSS_CLASS_INPUT_DANGER):t.sessionEmailInput.classList.add(o.CSS_CLASS_INPUT_DANGER)})),this.sessionPasswordInput.addEventListener("input",(function(){t.validation.passwordIsValid(t.sessionPasswordInput.value)?t.sessionPasswordInput.classList.remove(o.CSS_CLASS_INPUT_DANGER):t.sessionPasswordInput.classList.add(o.CSS_CLASS_INPUT_DANGER)})),this.buttonSessionSignUp.addEventListener("click",(function(){t.sessionForm.dataset.sessionType=t.HTML_SESSION_TYPE.signUp,t.sessionSubmit()})),this.buttonSessionSignIn.addEventListener("click",(function(){t.sessionForm.dataset.sessionType=t.HTML_SESSION_TYPE.signIn})),this.sessionForm.addEventListener("submit",(function(e){return t.sessionSubmit(e)}))},t.prototype.hiddenSessionForm=function(){this.sessionFormContainer.style.left="100vw"},t.prototype.sessionSubmit=function(t){t&&t.preventDefault(),this.progressIndicator.show();var e=this.sessionEmailInput.value;if(!this.validation.emailIsValid(e))return this.anim.shake(this.sessionEmailInput),this.progressIndicator.hidden(),void this.toaster.warn(this.sessionEmailInput.dataset.error);var n=this.sessionPasswordInput.value;return this.validation.passwordIsValid(n)?this.sessionForm.dataset.sessionType===this.HTML_SESSION_TYPE.signIn?this.sessionSignIn(e,n):void this.sessionSignUp(e,n):(this.anim.shake(this.sessionPasswordInput),this.progressIndicator.hidden(),void this.toaster.warn(this.sessionPasswordInput.dataset.error))},t.prototype.sessionSignUp=function(t,e){var n=this,o=null;this.api.post("/session/sign-up",{email:t,password:e}).then((function(t){return(o=t).json()})).then((function(t){n.progressIndicator.hidden(),200===o.status?(n.toaster.success("Olá, "+t.user.name,(function(){return window.location.reload()})),i.RestApiTool.updateToken(t.token)):n.toaster.danger(t.error)})).catch((function(t){n.progressIndicator.hidden(),console.error(t)}))},t.prototype.sessionSignIn=function(t,e){var n=this,o=null;this.api.post("/session",{email:t,password:e}).then((function(t){return(o=t).json()})).then((function(t){n.progressIndicator.hidden(),200===o.status?(n.toaster.success("Olá, "+t.user.name,(function(){return window.location.reload()})),i.RestApiTool.updateToken(t.token)):n.toaster.danger(t.error)})).catch((function(t){n.progressIndicator.hidden(),console.error(t)}))},t}();e.SessionModule=c},754:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.AnimTool=void 0;var o=n(484),s=function(){function t(){}return t.prototype.shake=function(t,e,n){void 0===e&&(e=!0),void 0===n&&(n=500),t.classList.contains(o.CSS_CLASS_SHAKE_ANIM)&&t.classList.remove(o.CSS_CLASS_SHAKE_ANIM),t.classList.add(o.CSS_CLASS_SHAKE_ANIM),e&&"function"==typeof t.focus&&t.focus(),setTimeout((function(){return t.classList.remove(o.CSS_CLASS_SHAKE_ANIM)}),n)},t.shake=function(t,e,n){void 0===e&&(e=!0),void 0===n&&(n=500),t.classList.contains(o.CSS_CLASS_SHAKE_ANIM)&&t.classList.remove(o.CSS_CLASS_SHAKE_ANIM),t.classList.add(o.CSS_CLASS_SHAKE_ANIM),e&&"function"==typeof t.focus&&t.focus(),setTimeout((function(){return t.classList.remove(o.CSS_CLASS_SHAKE_ANIM)}),n)},t}();e.AnimTool=s},922:function(t,e){var n=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))((function(s,r){function i(t){try{u(o.next(t))}catch(t){r(t)}}function a(t){try{u(o.throw(t))}catch(t){r(t)}}function u(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,a)}u((o=o.apply(t,e||[])).next())}))},o=this&&this.__generator||function(t,e){var n,o,s,r,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return r={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function a(a){return function(u){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;r&&(r=0,a[0]&&(i=0)),i;)try{if(n=1,o&&(s=2&a[0]?o.return:a[0]?o.throw||((s=o.return)&&s.call(o),0):o.next)&&!(s=s.call(o,a[1])).done)return s;switch(o=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,o=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=e.call(t,i)}catch(t){a=[6,t],o=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}};Object.defineProperty(e,"__esModule",{value:!0}),e.ImageTool=void 0;var s=function(){function t(){}return t.prototype.imageToBlob=function(t,e,s,r){var i=this;return void 0===e&&(e=300),void 0===s&&(s=300),void 0===r&&(r=!0),new Promise((function(a){try{if(!t)return a(null);var u=URL.createObjectURL(t),c=new Image;c.onload=function(){return n(i,void 0,void 0,(function(){var t,n,i,d,l,p,h,f;return o(this,(function(o){switch(o.label){case 0:return t=c.width,n=c.height,i=document.createElement("canvas"),d=i.getContext("2d"),(p=r)?t<n?[4,this.resizeHeight(c,t,n)]:[3,2]:[3,7];case 1:return h=o.sent(),[3,6];case 2:return t>n?[4,this.resizeWidth(c,t,n)]:[3,4];case 3:return f=o.sent(),[3,5];case 4:f=c,o.label=5;case 5:h=f,o.label=6;case 6:p=h,o.label=7;case 7:return l=p||c,d.canvas.width=e,d.canvas.height=s,d.drawImage(l,0,0,e,s),d.canvas.toBlob((function(t){URL.revokeObjectURL(u),a(t)}),"image/jpeg",1),[2]}}))}))},c.crossOrigin="Anonymous",c.src=u}catch(t){a(null)}}))},t.prototype.imageToBlobWhithoutResize=function(t){var e=this;return new Promise((function(s){try{if(!t)return s(null);var r=URL.createObjectURL(t),i=new Image;i.onload=function(){return n(e,void 0,void 0,(function(){var t,e,n,a;return o(this,(function(o){return t=.8*i.width,e=.8*i.height,n=document.createElement("canvas"),(a=n.getContext("2d")).canvas.width=t,a.canvas.height=e,a.drawImage(i,0,0,t,e),a.canvas.toBlob((function(t){URL.revokeObjectURL(r),s(t)}),"image/jpeg",1),[2]}))}))},i.crossOrigin="Anonymous",i.src=r}catch(t){s(null)}}))},t.prototype.resizeHeight=function(t,e,n){return new Promise((function(o){var s=document.createElement("canvas").getContext("2d");s.canvas.width=e,s.canvas.height=e,s.drawImage(t,0,.2*n,e,e,0,0,e,e);var r=new Image;r.onload=function(){return o(r)},r.src=s.canvas.toDataURL()}))},t.prototype.resizeWidth=function(t,e,n){return new Promise((function(o){var s=document.createElement("canvas").getContext("2d");s.canvas.width=n,s.canvas.height=n,s.drawImage(t,.2*e,0,n,n,0,0,n,n);var r=new Image;r.onload=function(){return o(r)},r.src=s.canvas.toDataURL()}))},t}();e.ImageTool=s},431:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ProgressIndicatorTool=void 0;var o=n(834),s=function(){function t(){this.className={container:"progress-indicator-container",background:"progress-indicator-background",indicator:"progress-indicator",indicator2:"progress-indicator-2"},this.indicator=null}return t.prototype.generate=function(){if(!this.indicator){var t=document.createElement("div"),e=document.createElement("div"),n=document.createElement("div"),o=document.createElement("div");t.classList.add(this.className.container),e.classList.add(this.className.background),n.classList.add(this.className.indicator),o.classList.add(this.className.indicator2),e.append(n,o),t.appendChild(e),this.indicator=t}},t.prototype.generateAndShow=function(){this.generate(),this.show()},t.prototype.show=function(){this.indicator&&o.WWWROOT.appendChild(this.indicator)},t.prototype.hidden=function(){var t=this;this.indicator&&setTimeout((function(){return t.indicator.remove()}),400)},t.prototype.destroyInstance=function(){this.indicator&&(this.indicator.remove(),this.indicator=null)},t}();e.ProgressIndicatorTool=s},593:function(t,e,n){var o=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))((function(s,r){function i(t){try{u(o.next(t))}catch(t){r(t)}}function a(t){try{u(o.throw(t))}catch(t){r(t)}}function u(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,a)}u((o=o.apply(t,e||[])).next())}))},s=this&&this.__generator||function(t,e){var n,o,s,r,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return r={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function a(a){return function(u){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;r&&(r=0,a[0]&&(i=0)),i;)try{if(n=1,o&&(s=2&a[0]?o.return:a[0]?o.throw||((s=o.return)&&s.call(o),0):o.next)&&!(s=s.call(o,a[1])).done)return s;switch(o=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,o=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=e.call(t,i)}catch(t){a=[6,t],o=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}};Object.defineProperty(e,"__esModule",{value:!0}),e.RestApiTool=void 0;var r=n(646),i=function(){function t(){this.base="/api"}return t.prototype.post=function(t,e,n){return void 0===n&&(n={}),o(this,void 0,void 0,(function(){var o,r;return s(this,(function(s){return o=this.recoveryToken(),r=new Headers,n&&Object.keys(n).forEach((function(t){return r.set(t,n[t])})),r.set("Content-Type","application/json"),o&&r.set("Authorization","Bearer ".concat(o)),[2,fetch(this.base.concat("/"===t[0]?t:"/"+t),{body:"string"==typeof e?e:JSON.stringify(e),headers:r,method:"POST"})]}))}))},t.prototype.patch=function(t,e,n){return void 0===n&&(n={}),o(this,void 0,void 0,(function(){var o,r;return s(this,(function(s){return o=this.recoveryToken(),r=new Headers,n&&Object.keys(n).forEach((function(t){return r.set(t,n[t])})),r.set("Content-Type","application/json"),o&&r.set("Authorization","Bearer ".concat(o)),[2,fetch(this.base.concat("/"===t[0]?t:"/"+t),{body:"string"==typeof e?e:JSON.stringify(e),headers:r,method:"PATCH"})]}))}))},t.prototype.put=function(t,e,n){return void 0===n&&(n={}),o(this,void 0,void 0,(function(){var o,r;return s(this,(function(s){return o=this.recoveryToken(),r=new Headers,n&&Object.keys(n).forEach((function(t){return r.set(t,n[t])})),r.set("Content-Type","application/json"),o&&r.set("Authorization","Bearer ".concat(o)),[2,fetch(this.base.concat("/"===t[0]?t:"/"+t),{body:"string"==typeof e?e:JSON.stringify(e),headers:r,method:"PUT"})]}))}))},t.prototype.delete=function(t,e){return void 0===e&&(e={}),o(this,void 0,void 0,(function(){var n,o;return s(this,(function(s){return n=this.recoveryToken(),o=new Headers,e&&Object.keys(e).forEach((function(t){return o.set(t,e[t])})),o.set("Content-Type","application/json"),n&&o.set("Authorization","Bearer ".concat(n)),[2,fetch(this.base.concat("/"===t[0]?t:"/"+t),{headers:o,method:"DELETE"})]}))}))},t.prototype.signOut=function(){return o(this,void 0,void 0,(function(){return s(this,(function(t){switch(t.label){case 0:return[4,this.delete("/session/sign-out")];case 1:return[2,200===t.sent().status]}}))}))},t.prototype.recoveryToken=function(){try{return localStorage.getItem(r.SYSTEM_STORAGE_KEY_TOKEN)}catch(t){return null}},t.updateToken=function(t){t?localStorage.setItem(r.SYSTEM_STORAGE_KEY_TOKEN,t):console.error("TOKEN_INVALID")},t}();e.RestApiTool=i},339:function(t,e,n){var o=this&&this.__rest||function(t,e){var n={};for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&e.indexOf(o)<0&&(n[o]=t[o]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(o=Object.getOwnPropertySymbols(t);s<o.length;s++)e.indexOf(o[s])<0&&Object.prototype.propertyIsEnumerable.call(t,o[s])&&(n[o[s]]=t[o[s]])}return n};Object.defineProperty(e,"__esModule",{value:!0}),e.ToasterTool=void 0;var s=n(484),r=n(834),i="toaster-container",a={success:"bi-check2-circle",info:"bi-info-circle",danger:"bi-exclamation-diamond",warn:"bi-question-diamond"},u=function(){function t(){}return t.prototype.success=function(t,e,n){if(void 0===t&&(t=":)"),void 0===n&&(n=6e3),document.getElementById(i))this.toStack(t,n,e,"success");else{var o=this.generateBase(t,"success",n,e),s=o.container,r=o.containerActive,a=o.message,u=o.headerIcon;s.style.background="var(--success)",a.style.color="var(--textWarn)",a.style.fontWeight="500",u.style.color="var(--textWarn)",r.style.borderColor="var(--textSecondary)",this.toWWWROOT(s)}},t.prototype.info=function(t,e,n){if(void 0===n&&(n=6e3),document.getElementById(i))this.toStack(t,n,e,"info");else{var o=this.generateBase(t,"info",n,e).container;this.toWWWROOT(o)}},t.prototype.warn=function(t,e,n){if(void 0===t&&(t="Oopsss..."),void 0===n&&(n=6e3),document.getElementById(i))this.toStack(t,n,e,"warn");else{var o=this.generateBase(t,"warn",n,e),s=o.container,r=o.containerActive,a=o.message,u=o.headerIcon;s.style.background="var(--warn)",a.style.color="var(--textWarn)",a.style.fontWeight="500",u.style.color="var(--textWarn)",r.style.borderColor="var(--textSecondary)",this.toWWWROOT(s)}},t.prototype.danger=function(t,e,n){if(void 0===t&&(t="Oopsss..."),void 0===n&&(n=6e3),document.getElementById(i))this.toStack(t,n,e,"danger");else{var o=this.generateBase(t,"danger",n,e),s=o.container,r=o.containerActive;s.style.background="var(--danger)",r.style.borderColor="var(--textSecondary)",this.toWWWROOT(s)}},t.prototype.toStack=function(e,n,o,s){t.stack.push({message:e,timer:n,type:s,onDestroy:o})},t.prototype.toWWWROOT=function(t){r.WWWROOT.appendChild(t),setTimeout((function(){t.style.transform="scale(1.05)",setTimeout((function(){return t.style.transform=""}),s.CSS_DEFAULT_TRANSITION_TIME)}),100)},t.prototype.generateBase=function(e,n,r,u){var c=document.createElement("div"),d=document.createElement("div"),l=document.createElement("header"),p=document.createElement("div"),h=document.createElement("p"),f=document.createElement("i");c.id=i,d.id="toaster-container-active",l.id="toaster-header",p.id="toaster-header-part",h.id="toaster-message",f.classList.add("bi",a[n]),c.style.transform="scale(0)",c.style.transition="all ".concat(s.CSS_DEFAULT_TRANSITION_TIME-100,"ms ease-in-out"),h.textContent=e||"",p.append(f,h),l.append(p);var m=document.createElement("style");m.innerHTML="\n      .class-anim-toaster-container-active {\n        animation: anim-toaster-container-active ".concat(r,"ms ease-out;\n      }\n\n      @keyframes anim-toaster-container-active {\n        to {\n          transform: translateX(-100%);\n        }\n      }\n    "),d.classList.add("class-anim-toaster-container-active"),document.head.appendChild(m),c.append(d,l);var v=this,S=function(){m.remove(),c.style.transform="scale(0)",setTimeout((function(){if(c.remove(),u&&"function"==typeof u&&u(),t.stack.length>0){var e=t.stack.shift(),n=e.type,s=o(e,["type"]);v[n](s.message,s.onDestroy,s.timer)}}),s.CSS_DEFAULT_TRANSITION_TIME-150)},w=setTimeout((function(){return S()}),r),y=setTimeout((function(){d.remove()}),r-100);return c.addEventListener("click",(function(){clearTimeout(w),clearTimeout(y),S()})),{container:c,containerActive:d,header:l,headerIcon:f,message:h,destroy:S}},t.stack=[],t}();e.ToasterTool=u},578:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.UserEntityValidation=void 0;var n=function(){function t(){this.emailRegex=/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/}return t.prototype.emailIsValid=function(t){return t&&this.emailRegex.test(t)},t.prototype.passwordIsValid=function(t){return t&&t.length>=8},t.prototype.nameIsValid=function(t){return t&&t.length>=2},t}();e.UserEntityValidation=n}},o={};function s(t){var e=o[t];if(void 0!==e)return e.exports;var r=o[t]={exports:{}};return n[t].call(r.exports,r,r.exports,s),r.exports}t=s(349),e=s(251),function(){function n(){}return n.prototype.run=function(){var n=document.querySelector("#input-f-html-page-name");if(!n)return console.error("Input HTML page name not found - 404");if(!n.dataset.page)return console.error("Input HTML data page not defined - 400");switch(n.dataset.page){case"INDEX_PAGE":case"USER_PAGE":(new e.SessionModule).run();break;case"USER_PAGE_LOGGED_IN":(new t.LoggedUserPageModule).run()}},n.build=function(){return new n},n}().build().run()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,