(()=>{"use strict";var t,e,n,r={332:function(t,e){var n=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(s,i){function o(t){try{u(r.next(t))}catch(t){i(t)}}function a(t){try{u(r.throw(t))}catch(t){i(t)}}function u(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,a)}u((r=r.apply(t,e||[])).next())}))},r=this&&this.__generator||function(t,e){var n,r,s,i,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(a){return function(u){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,a[0]&&(o=0)),o;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!((s=(s=o.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){o.label=a[1];break}if(6===a[0]&&o.label<s[1]){o.label=s[1],s=a;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(a);break}s[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}};Object.defineProperty(e,"__esModule",{value:!0}),e.UpdateUser=void 0;var s=function(){function t(){}return t.avatar=function(t,e){return n(this,void 0,void 0,(function(){var n,s,i,o,a,u;return r(this,(function(r){switch(r.label){case 0:return(n=new FormData).append("avatar",t),s=e.generateBase("/user/avatar"),i=s.URL,o=s.headers,[4,fetch(i,{body:n,headers:o,method:"PATCH"})];case 1:return[4,(a=r.sent()).json()];case 2:return u=r.sent(),[2,{res:a,json:u,status:a.status}]}}))}))},t.userName=function(t,e){return n(this,void 0,void 0,(function(){var n,s;return r(this,(function(r){switch(r.label){case 0:return[4,e.patch("/user/name",{name:t})];case 1:return[4,(n=r.sent()).json()];case 2:return s=r.sent(),[2,{res:n,json:s,status:n.status}]}}))}))},t.email=function(t,e,s){return n(this,void 0,void 0,(function(){var n,i;return r(this,(function(r){switch(r.label){case 0:return[4,s.patch("/user/email",{email:t,password:e})];case 1:return[4,(n=r.sent()).json()];case 2:return i=r.sent(),[2,{res:n,json:i,status:n.status}]}}))}))},t.password=function(t,e,s){return n(this,void 0,void 0,(function(){var n,i;return r(this,(function(r){switch(r.label){case 0:return[4,s.patch("/user/password",{password:e,newPassword:t})];case 1:return[4,(n=r.sent()).json()];case 2:return i=r.sent(),[2,{res:n,json:i,status:n.status}]}}))}))},t}();e.UpdateUser=s},484:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.CSS_DEFAULT_TRANSITION_TIME=e.CSS_CLASS_SHAKE_ANIM=e.CSS_CLASS_INPUT_DANGER=void 0;var r,s=n(834);e.CSS_CLASS_INPUT_DANGER="input-danger",e.CSS_CLASS_SHAKE_ANIM="element-animated-by-shake",e.CSS_DEFAULT_TRANSITION_TIME=!(r=s.WWWROOT.dataset.defaultTransition)||isNaN(Number(r))?(console.error("WWWROOT is not defining the default CSS transition data"),400):Number(r)},834:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.WWWROOT=void 0,e.WWWROOT=document.getElementById("wwwroot")},646:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SYSTEM_STORAGE_KEY_TOKEN=void 0,e.SYSTEM_STORAGE_KEY_TOKEN="@key::System_Token"},349:function(t,e,n){var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(s,i){function o(t){try{u(r.next(t))}catch(t){i(t)}}function a(t){try{u(r.throw(t))}catch(t){i(t)}}function u(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,a)}u((r=r.apply(t,e||[])).next())}))},s=this&&this.__generator||function(t,e){var n,r,s,i,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(a){return function(u){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,a[0]&&(o=0)),o;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!((s=(s=o.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){o.label=a[1];break}if(6===a[0]&&o.label<s[1]){o.label=s[1],s=a;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(a);break}s[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}};Object.defineProperty(e,"__esModule",{value:!0}),e.LoggedUserPageModule=void 0;var i=n(332),o=n(484),a=n(754),u=n(922),c=n(431),d=n(593),l=n(339),p=n(578),h=function(){function t(){this.anim=new a.AnimTool,this.validation=new p.UserEntityValidation,this.progress=new c.ProgressIndicatorTool,this.api=new d.RestApiTool,this.toaster=new l.ToasterTool,this.avatar={tool:new u.ImageTool,HTMLImage:document.getElementById("avatar-IMG"),input:document.getElementById("avatar-hidden-input"),chooseButton:document.getElementById("choose-avatar-button"),blob:null},this.password={pseudoInput:document.getElementById("pseudo-input-password"),formContainer:document.querySelector(".form-user-password-container"),formContainerData:["",""],form:document.querySelector(".form-user-password"),input:document.getElementById("new-password"),inputConfirm:document.getElementById("new-password-again"),inputCurrentPassword:document.getElementById("current-password"),hiddenPassword:document.getElementById("hidden-password"),showPassword:document.getElementById("show-password")},this.signOutButton=document.getElementById("sign-out-button");var t=document.getElementById("pseudo-input-name"),e=document.querySelector(".form-user-container"),n=e.querySelector(".form-user-name"),r=n.querySelector("input"),s=[document.getElementById("user-name-strong")];this.name={pseudoInput:t,pseudoInputSpan:t.querySelector("span"),formContainer:e,formContainerData:["",""],form:n,input:r,originalValue:r.dataset.original,updateOn:s},this.name.updateOn.push(this.name.pseudoInputSpan);var i=document.getElementById("pseudo-input-email"),o=document.querySelector(".form-user-email-container"),h=o.querySelector(".form-user-email"),f=h.querySelector("input"),m=h.querySelector('input[type="password"]');this.email={pseudoInput:i,pseudoInputSpan:i.querySelector("span"),formContainer:o,formContainerData:["",""],form:h,input:f,originalValue:f.dataset.original,updateOn:[],passwordInput:m},this.email.updateOn.push(this.email.pseudoInputSpan)}return t.prototype.run=function(){this.processFormContainerDataset(),this.setListeners(),this.processBodySize(),this.processPassword(),this.progress.generate()},t.prototype.processFormContainerDataset=function(){this.name.formContainerData=this.name.formContainer.dataset.originalPos.split("."),this.email.formContainerData=this.email.formContainer.dataset.originalPos.split("."),this.password.formContainerData=this.password.formContainer.dataset.originalPos.split(".")},t.prototype.setListeners=function(){var t=this;this.avatar.chooseButton.addEventListener("click",(function(){return t.avatar.input.click()})),this.avatar.input.addEventListener("input",(function(){return t.avatarProcessing()})),this.name.pseudoInput.addEventListener("click",(function(){return t.activeUserInputConfiguration(t.name)})),this.name.form.addEventListener("submit",(function(e){e.preventDefault(),t.updateName()})),this.name.input.addEventListener("input",(function(){t.validation.nameIsValid(t.name.input.value)?t.name.input.classList.remove(o.CSS_CLASS_INPUT_DANGER):t.name.input.classList.add(o.CSS_CLASS_INPUT_DANGER)})),this.name.form.querySelector(".button-danger").addEventListener("click",(function(){t.name.input.value=t.name.originalValue,t.disableUserInputConfiguration(t.name)})),this.email.pseudoInput.addEventListener("click",(function(){return t.activeUserInputConfiguration(t.email)})),this.email.form.addEventListener("submit",(function(e){e.preventDefault(),t.updateEmail()})),this.email.input.addEventListener("input",(function(){t.validation.emailIsValid(t.email.input.value)?t.email.input.classList.remove(o.CSS_CLASS_INPUT_DANGER):t.email.input.classList.add(o.CSS_CLASS_INPUT_DANGER)})),this.email.passwordInput.addEventListener("input",(function(){t.validation.passwordIsValid(t.email.passwordInput.value)?t.email.passwordInput.classList.remove(o.CSS_CLASS_INPUT_DANGER):t.email.passwordInput.classList.add(o.CSS_CLASS_INPUT_DANGER)})),this.email.form.querySelector(".button-danger").addEventListener("click",(function(){t.email.input.value=t.email.originalValue,t.disableUserInputConfiguration(t.email)})),this.signOutButton.addEventListener("click",(function(){return t.signOut()}))},t.prototype.processPassword=function(){var t=this;this.password.showPassword.addEventListener("click",(function(){t.password.showPassword.classList.add("d-none"),t.password.hiddenPassword.classList.remove("d-none"),t.password.input.type="text",t.password.inputConfirm.type="text",t.password.inputCurrentPassword.type="text"})),this.password.hiddenPassword.addEventListener("click",(function(){t.password.showPassword.classList.remove("d-none"),t.password.hiddenPassword.classList.add("d-none"),t.password.input.type="password",t.password.inputConfirm.type="password",t.password.inputCurrentPassword.type="password"})),this.password.pseudoInput.addEventListener("click",(function(){return t.activeUserInputPasswordConfiguration()})),this.password.form.querySelector(".button-danger").addEventListener("click",(function(){var e=t.password.formContainerData,n=e[0],r=e[1];t.password.formContainer.style[n]=r})),this.password.form.addEventListener("submit",(function(e){e.preventDefault(),t.updatePassword()})),this.password.input.addEventListener("input",(function(){if(t.validation.passwordIsValid(t.password.input.value)){if(t.password.input.value!==t.password.inputConfirm.value)return t.password.input.classList.add(o.CSS_CLASS_INPUT_DANGER),void t.password.inputConfirm.classList.add(o.CSS_CLASS_INPUT_DANGER);t.password.input.classList.remove(o.CSS_CLASS_INPUT_DANGER),t.password.inputConfirm.classList.remove(o.CSS_CLASS_INPUT_DANGER),t.password.input.classList.remove(o.CSS_CLASS_INPUT_DANGER)}else t.password.input.classList.add(o.CSS_CLASS_INPUT_DANGER)})),this.password.inputConfirm.addEventListener("input",(function(){if(t.validation.passwordIsValid(t.password.inputConfirm.value)){if(t.password.input.value!==t.password.inputConfirm.value)return t.password.input.classList.add(o.CSS_CLASS_INPUT_DANGER),void t.password.inputConfirm.classList.add(o.CSS_CLASS_INPUT_DANGER);t.password.input.classList.remove(o.CSS_CLASS_INPUT_DANGER),t.password.inputConfirm.classList.remove(o.CSS_CLASS_INPUT_DANGER),t.password.inputConfirm.classList.remove(o.CSS_CLASS_INPUT_DANGER)}else t.password.inputConfirm.classList.add(o.CSS_CLASS_INPUT_DANGER)})),this.password.inputCurrentPassword.addEventListener("input",(function(){t.validation.passwordIsValid(t.password.inputCurrentPassword.value)?t.password.inputCurrentPassword.classList.remove(o.CSS_CLASS_INPUT_DANGER):t.password.inputCurrentPassword.classList.add(o.CSS_CLASS_INPUT_DANGER)}))},t.prototype.activeUserInputConfiguration=function(t){t.pseudoInput.style.borderColor="var(--secondary)",t.pseudoInputSpan.style.color="var(--title)";var e=t.formContainerData[0];t.formContainer.style[e]="0",setTimeout((function(){t.pseudoInput.style.borderColor="",t.pseudoInputSpan.style.color=""}),500)},t.prototype.disableUserInputConfiguration=function(t){var e=t.formContainerData,n=e[0],r=e[1];t.formContainer.style[n]=r},t.prototype.activeUserInputPasswordConfiguration=function(){var t=this.password.formContainerData[0];this.password.formContainer.style[t]="0"},t.prototype.avatarProcessing=function(){return r(this,void 0,void 0,(function(){var t,e=this;return s(this,(function(n){switch(n.label){case 0:return this.avatar.input.files&&this.avatar.input.files[0]?[4,this.avatar.tool.imageToBlob(this.avatar.input.files[0])]:[3,2];case 1:(t=n.sent())&&(this.progress.show(),i.UpdateUser.avatar(t,this.api).then((function(n){var r=n.json;200===n.status?(e.avatar.blob=t,e.avatar.HTMLImage.src=r.URL.concat("?query="+Date.now())):e.toaster.warn(r.error),e.progress.hidden()})).catch((function(t){console.log(t),e.progress.hidden(),e.toaster.danger()}))),n.label=2;case 2:return[2]}}))}))},t.prototype.processBodySize=function(){var t=document.querySelector(".header").clientHeight;document.querySelector("#user-body").style.minHeight="calc(100vh - ".concat(t,"px)")},t.prototype.updateName=function(){var t=this,e=this.name.input.value;if(!this.validation.nameIsValid(e))return this.toaster.warn(this.name.input.dataset.error),void this.anim.shake(this.name.input);i.UpdateUser.userName(e,this.api).then((function(n){var r=n.json;200===n.status?(t.toaster.success(r.message),t.name.updateOn.forEach((function(t){return t.textContent=e})),t.disableUserInputConfiguration(t.name)):t.toaster.warn(r.error)})).catch((function(e){t.toaster.danger(),console.log(e)}))},t.prototype.updateEmail=function(){var t=this,e=this.email.input.value;if(!this.validation.emailIsValid(e))return this.toaster.warn(this.email.input.dataset.error),void this.anim.shake(this.email.input);var n=this.email.passwordInput.value;if(!this.validation.passwordIsValid(n))return this.toaster.warn(this.email.passwordInput.dataset.error),void this.anim.shake(this.email.passwordInput);i.UpdateUser.email(e,n,this.api).then((function(n){var r=n.json;if(200===n.status){var s=r.token;d.RestApiTool.updateToken(s),t.toaster.success(r.message),t.email.updateOn.forEach((function(t){return t.textContent=e})),t.disableUserInputConfiguration(t.email)}else t.toaster.warn(r.error)})).catch((function(e){t.toaster.danger(),console.log(e)}))},t.prototype.updatePassword=function(){var t=this,e=this.password.input.value;if(e!==this.password.inputConfirm.value)return this.anim.shake(this.password.inputConfirm),this.toaster.warn(this.password.inputConfirm.dataset.error),void console.log({newPassword:e,again:this.password.inputConfirm.value});if(!this.validation.passwordIsValid(e))return this.anim.shake(this.password.input),void this.toaster.warn(this.password.input.dataset.error);var n=this.password.inputCurrentPassword.value;if(!this.validation.passwordIsValid(n))return this.anim.shake(this.password.inputCurrentPassword),void this.toaster.warn(this.password.inputCurrentPassword.dataset.error);i.UpdateUser.password(e,n,this.api).then((function(e){var n=e.json;200===e.status?(t.toaster.success(n.message),t.password.form.querySelector(".button-danger").click(),t.password.input.value="",t.password.inputConfirm.value="",t.password.inputCurrentPassword.value=""):(t.toaster.warn(n.error),console.log(n))})).catch((function(e){t.toaster.danger(),console.log(e)}))},t.prototype.signOut=function(){var t=this;this.progress.show(),this.api.signOut().then((function(e){e?t.toaster.success(t.signOutButton.dataset.message,(function(){return window.location.reload()})):t.toaster.danger("Oopss..."),t.progress.hidden()})).catch((function(e){console.log(e),t.toaster.danger("Oopss..."),t.progress.hidden()}))},t}();e.LoggedUserPageModule=h},307:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.NewQuizAddQuestModule=void 0;var r=n(484),s=n(499),i=function(){function t(t,e,n,r,s,i,o){this.pushQuest=e,this.toaster=n,this.imageTool=r,this.validation=s,this.progress=i,this.anim=o,this.container=t.querySelector(".add-quest-container");var a=this.container.querySelector("input#alternative-1");this.selectCorrectAlternative=this.container.querySelector("select#alternative-correct"),this.questAddedMessage=this.container.dataset.added,this.cancelButton=this.container.querySelector("button#quest-cancel"),this.HTMLImage=this.container.querySelector('img[role="button"]'),this.defaultHTMLImageSRC="",this.HTMLImageInput=this.container.querySelector("input#quest-img-input"),this.HTMLImageBlob=null,this.titleInput=this.container.querySelector("input#quest-title"),this.addAlternativeButton=this.container.querySelector("button#add-alternative"),this.alternatives=[{id:1,content:"",isCorrect:!0,input:a},{id:2,content:"",isCorrect:!1,input:this.container.querySelector("input#alternative-2")}],this.alternativesContainer=this.container.querySelector("ul.alternative-group"),this.defaultAlternativeInputConfig={ariaLabel:a.ariaLabel.split("1")[0],dataError:a.dataset.error,placeholder:a.placeholder.split("1")[0],prefix:a.id.split("1")[0],className:a.dataset.className,namePrefix:this.selectCorrectAlternative.querySelector("option").textContent.split(" ")[0],classToAlternativeCorrect:a.dataset.classCorrect,classToAlternativeIncorrect:a.dataset.classIncorrect,alternativeEqualErrorMessage:""},this.maxAlternativeInfo="",this.addButton=this.container.querySelector("button#quest-add"),this.selectQuestTime=this.container.querySelector("select#quest-time"),this.maxAlternativeInfo=this.addAlternativeButton.dataset.info,this.defaultAlternativeInputConfig.alternativeEqualErrorMessage=this.alternativesContainer.dataset.errorEqual,this.defaultHTMLImageSRC=this.HTMLImage.src}return t.prototype.resetAddQuest=function(){var t=this;t.HTMLImage.src=t.defaultHTMLImageSRC,t.titleInput.value="",t.alternatives.forEach((function(t){t.id>2&&t.input.parentElement.querySelector("button").click()})),t.alternatives=t.alternatives.filter((function(t){return t.id<3})),t.alternatives.forEach((function(t){t.isCorrect=1===t.id,t.content="",t.input.value=""})),t.selectQuestTime.querySelector("option").selected=!0,this.updateIsCorrectAlternative()},t.prototype.configureAddQuest=function(t){var e=this,n=this.container.dataset.off.split("."),r=n[0],s=n[1];t.addEventListener("click",(function(){return e.container.style[r]=""})),this.cancelButton.addEventListener("click",(function(){return e.container.style[r]=s})),this.HTMLImage.addEventListener("click",(function(){return e.HTMLImageInput.click()})),this.HTMLImageInput.addEventListener("input",(function(){return e.processQuestBanner()})),this.titleInput.value="",this.titleInput.addEventListener("input",(function(){e.validation.titleIsValid(e.titleInput.value)?e.titleInput.classList.remove("input-danger"):e.titleInput.classList.add("input-danger")})),this.configureAddQuestInputListeners(),this.addAlternativeButton.addEventListener("click",(function(){return e.addAlternativeToQuest()})),this.selectCorrectAlternative.addEventListener("change",(function(){return e.updateIsCorrectAlternative()})),this.addButton.addEventListener("click",(function(){var t=e;if(e.getIfAddQuestIsValid()){var n={banner:t.HTMLImageBlob,time:isNaN(Number(t.selectQuestTime.value))?30:Number(t.selectQuestTime.value),title:t.titleInput.value,alternatives:t.alternatives.map((function(t){return{content:t.content,id:t.id,isCorrect:t.isCorrect}}))};e.pushQuest(n),e.resetAddQuest(),e.toaster.success(e.questAddedMessage),console.log(e)}}))},t.prototype.processQuestBanner=function(){var t=this,e=this.HTMLImageInput.files[0];e?(this.progress.generateAndShow(),this.imageTool.imageToBlobWhithoutResize(e).then((function(e){t.progress.hidden(),e&&(t.HTMLImage.src.startsWith("blob")&&URL.revokeObjectURL(t.HTMLImage.src),t.HTMLImage.src=URL.createObjectURL(e),t.HTMLImageBlob=e)})).catch((function(e){t.progress.hidden(),console.log(e),t.toaster.warn()}))):this.toaster.warn()},t.prototype.configureAddQuestInputListeners=function(){this.alternatives.forEach((function(t){t.content=t.input.value,t.input.oninput=function(){t.content=t.input.value,t.content.length<1||t.content.length>s.NewQuizFormValidation.FIELD_MAX_LENGTH?t.input.classList.add("input-danger"):t.input.classList.remove("input-danger")}}))},t.prototype.addAlternativeToQuest=function(){var t=this;if(this.alternatives.length>=4)return this.toaster.info(this.maxAlternativeInfo),void this.anim.shake(this.addAlternativeButton);var e=document.createElement("li");e.style.transform="scale(0)";var n=document.createElement("div");n.classList.add("item");var i=this.alternatives[this.alternatives.length-1].id+1,o=document.createElement("span");o.textContent="".concat(i,".");var a=document.createElement("input");a.type="text",a.maxLength=s.NewQuizFormValidation.FIELD_MAX_LENGTH;var u=this.defaultAlternativeInputConfig;a.placeholder=u.placeholder.concat(i.toString()),a.dataset.error=u.dataError,a.classList.add(u.className),a.classList.add(u.classToAlternativeIncorrect),a.id=u.prefix.concat(i.toString()),a.ariaLabel=u.ariaLabel.concat(i.toString());var c=document.createElement("option");c.value=i.toString(),c.textContent=u.namePrefix.concat(" ",i.toString()),this.selectCorrectAlternative.appendChild(c);var d=document.createElement("button");d.type="button",d.classList.add("icon-button");var l=document.createElement("i");l.setAttribute("class","bi bi-trash3-fill"),d.appendChild(l),d.addEventListener("click",(function(){e.style.transform="scale(0)",setTimeout((function(){t.alternatives=t.alternatives.filter((function(t){return t.id!==i})),t.configureAddQuestInputListeners(),e.remove(),c.remove(),t.alternatives.find((function(t){return t.isCorrect}))||(t.alternatives[0].isCorrect=!0,t.updateIsCorrectAlternative())}),r.CSS_DEFAULT_TRANSITION_TIME)}));var p={id:i,content:"",input:a,isCorrect:!1};this.alternatives.push(p),n.append(o,a,d),e.appendChild(n),this.alternativesContainer.appendChild(e),this.configureAddQuestInputListeners(),setTimeout((function(){return e.style.transform=""}),10)},t.prototype.updateIsCorrectAlternative=function(){var t=this;this.alternatives.forEach((function(e){if(!e)return t.toaster.warn(),void(t.selectCorrectAlternative.querySelector("option").selected=!0);e.id===Number(t.selectCorrectAlternative.value)?(e.isCorrect=!0,e.input.classList.add(t.defaultAlternativeInputConfig.classToAlternativeCorrect),e.input.classList.remove(t.defaultAlternativeInputConfig.classToAlternativeIncorrect)):(e.isCorrect=!1,e.input.classList.remove(t.defaultAlternativeInputConfig.classToAlternativeCorrect),e.input.classList.add(t.defaultAlternativeInputConfig.classToAlternativeIncorrect))}))},t.prototype.getIfAddQuestIsValid=function(){if(!this.validation.titleIsValid(this.titleInput.value))return this.toaster.warn(this.titleInput.dataset.error),this.anim.shake(this.titleInput),!1;for(var t=0;t<this.alternatives.length;t++){var e=this.alternatives[t];if(!e.content||e.content.length<1||e.content.length>s.NewQuizFormValidation.FIELD_MAX_LENGTH)return this.anim.shake(e.input),this.toaster.warn(e.input.dataset.error),!1}var n=function(t){var e=r.alternatives[t],n=r.alternatives.find((function(t){return t.content===e.content&&t.id!==e.id}));if(n)return r.anim.shake(e.input),r.anim.shake(n.input),r.toaster.danger(r.defaultAlternativeInputConfig.alternativeEqualErrorMessage),{value:!1}},r=this;for(t=0;t<this.alternatives.length;t++){var i=n(t);if("object"==typeof i)return i.value}return!0},t}();e.NewQuizAddQuestModule=i},266:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.NewQuizFormModule=void 0;var r=n(754),s=n(922),i=n(431),o=n(339),a=n(499),u=n(307),c=function(){function t(){this.toaster=new o.ToasterTool,this.imageTool=new s.ImageTool,this.validation=new a.NewQuizFormValidation,this.progress=new i.ProgressIndicatorTool,this.anim=new r.AnimTool,this.goBack=document.querySelector('a.link[role="button"]'),this.quests=[],this.form=document.getElementById("new-quiz-form"),this.banner={blob:null,HTMLImage:this.form.querySelector("img.quiz-banner"),input:this.form.querySelector("input#banner-input")},this.titleInput=this.form.querySelector("input#quiz-title"),this.buttonAddQuest=this.form.querySelector("#add-quest"),this.addQuest=new u.NewQuizAddQuestModule(this.form,this.pushQuest,this.toaster,this.imageTool,this.validation,this.progress,this.anim)}return t.prototype.run=function(){this.setListeners()},t.prototype.setListeners=function(){var t=this;this.goBack.addEventListener("click",(function(t){t.preventDefault(),window.history.back()})),this.banner.HTMLImage.addEventListener("click",(function(){return t.banner.input.click()})),this.banner.input.value="",this.banner.input.addEventListener("input",(function(){return t.processBanner()})),this.titleInput.value="",this.titleInput.addEventListener("input",(function(){t.validation.titleIsValid(t.titleInput.value)?t.titleInput.classList.remove("input-danger"):t.titleInput.classList.add("input-danger")})),this.addQuest.configureAddQuest(this.buttonAddQuest)},t.prototype.processBanner=function(){var t=this,e=this.banner.input.files[0];e?this.imageTool.imageToBlobWhithoutResize(e).then((function(e){t.banner.HTMLImage.src.startsWith("blob")&&URL.revokeObjectURL(t.banner.HTMLImage.src),t.banner.blob=e,t.banner.HTMLImage.src=URL.createObjectURL(e)})).catch((function(){return t.toaster.warn()})):this.toaster.danger()},t.prototype.pushQuest=function(t){this.quests.push(t)},t}();e.NewQuizFormModule=c},251:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SessionModule=void 0;var r=n(484),s=n(754),i=n(431),o=n(593),a=n(339),u=n(578),c=function(){function t(){this.HTML_SESSION_TYPE={signIn:"SIGN_IN",signUp:"SIGN_UP"},this.validation=new u.UserEntityValidation,this.anim=new s.AnimTool,this.api=new o.RestApiTool,this.toaster=new a.ToasterTool,this.progressIndicator=new i.ProgressIndicatorTool,this.buttonShowSessionForm=document.querySelector("#show-session-form"),this.buttonHiddenSessionForm=document.querySelector("#session-form-hidden"),this.showSessionFormFromBody=document.querySelector("#container-view-call-session-form"),this.homeLink=document.querySelector("#home-link"),this.sessionFormContainer=document.querySelector("#session-form"),this.sessionForm=this.sessionFormContainer.querySelector("form"),this.sessionEmailInput=this.sessionForm.querySelector("#session-email"),this.sessionPasswordInput=this.sessionForm.querySelector("#session-password"),this.buttonSessionSignUp=this.sessionForm.querySelector("#sign-up"),this.buttonSessionSignIn=this.sessionForm.querySelector('button[type="submit"]')}return t.prototype.run=function(){this.setListeners(),this.progressIndicator.generate(),console.log(this)},t.prototype.showSessionForm=function(){this.sessionFormContainer.style.left="0"},t.prototype.setListeners=function(){var t=this;this.buttonShowSessionForm.addEventListener("click",(function(){return t.showSessionForm()})),this.buttonHiddenSessionForm.addEventListener("click",(function(){return t.hiddenSessionForm()})),this.showSessionFormFromBody&&this.homeLink&&(this.showSessionFormFromBody.addEventListener("click",(function(){return t.showSessionForm()})),this.homeLink.addEventListener("click",(function(t){t.preventDefault(),window.history.back()}))),this.sessionEmailInput.addEventListener("input",(function(){t.validation.emailIsValid(t.sessionEmailInput.value)?t.sessionEmailInput.classList.remove(r.CSS_CLASS_INPUT_DANGER):t.sessionEmailInput.classList.add(r.CSS_CLASS_INPUT_DANGER)})),this.sessionPasswordInput.addEventListener("input",(function(){t.validation.passwordIsValid(t.sessionPasswordInput.value)?t.sessionPasswordInput.classList.remove(r.CSS_CLASS_INPUT_DANGER):t.sessionPasswordInput.classList.add(r.CSS_CLASS_INPUT_DANGER)})),this.buttonSessionSignUp.addEventListener("click",(function(){t.sessionForm.dataset.sessionType=t.HTML_SESSION_TYPE.signUp,t.sessionSubmit()})),this.buttonSessionSignIn.addEventListener("click",(function(){t.sessionForm.dataset.sessionType=t.HTML_SESSION_TYPE.signIn})),this.sessionForm.addEventListener("submit",(function(e){return t.sessionSubmit(e)}))},t.prototype.hiddenSessionForm=function(){this.sessionFormContainer.style.left="100vw"},t.prototype.sessionSubmit=function(t){t&&t.preventDefault(),this.progressIndicator.show();var e=this.sessionEmailInput.value;if(!this.validation.emailIsValid(e))return this.anim.shake(this.sessionEmailInput),this.progressIndicator.hidden(),void this.toaster.warn(this.sessionEmailInput.dataset.error);var n=this.sessionPasswordInput.value;return this.validation.passwordIsValid(n)?this.sessionForm.dataset.sessionType===this.HTML_SESSION_TYPE.signIn?this.sessionSignIn(e,n):void this.sessionSignUp(e,n):(this.anim.shake(this.sessionPasswordInput),this.progressIndicator.hidden(),void this.toaster.warn(this.sessionPasswordInput.dataset.error))},t.prototype.sessionSignUp=function(t,e){var n=this,r=null;this.api.post("/session/sign-up",{email:t,password:e}).then((function(t){return(r=t).json()})).then((function(t){n.progressIndicator.hidden(),200===r.status?(n.toaster.success("Olá, "+t.user.name,(function(){return window.location.reload()})),o.RestApiTool.updateToken(t.token)):n.toaster.danger(t.error)})).catch((function(t){n.progressIndicator.hidden(),console.error(t)}))},t.prototype.sessionSignIn=function(t,e){var n=this,r=null;this.api.post("/session",{email:t,password:e}).then((function(t){return(r=t).json()})).then((function(t){n.progressIndicator.hidden(),200===r.status?(n.toaster.success("Olá, "+t.user.name,(function(){return window.location.reload()})),o.RestApiTool.updateToken(t.token)):n.toaster.danger(t.error)})).catch((function(t){n.progressIndicator.hidden(),console.error(t)}))},t}();e.SessionModule=c},754:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.AnimTool=void 0;var r=n(484),s=function(){function t(){}return t.prototype.shake=function(t,e,n){void 0===e&&(e=!0),void 0===n&&(n=500),t.classList.contains(r.CSS_CLASS_SHAKE_ANIM)&&t.classList.remove(r.CSS_CLASS_SHAKE_ANIM),t.classList.add(r.CSS_CLASS_SHAKE_ANIM),e&&"function"==typeof t.focus&&t.focus(),setTimeout((function(){return t.classList.remove(r.CSS_CLASS_SHAKE_ANIM)}),n)},t.shake=function(t,e,n){void 0===e&&(e=!0),void 0===n&&(n=500),t.classList.contains(r.CSS_CLASS_SHAKE_ANIM)&&t.classList.remove(r.CSS_CLASS_SHAKE_ANIM),t.classList.add(r.CSS_CLASS_SHAKE_ANIM),e&&"function"==typeof t.focus&&t.focus(),setTimeout((function(){return t.classList.remove(r.CSS_CLASS_SHAKE_ANIM)}),n)},t}();e.AnimTool=s},922:function(t,e){var n=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(s,i){function o(t){try{u(r.next(t))}catch(t){i(t)}}function a(t){try{u(r.throw(t))}catch(t){i(t)}}function u(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,a)}u((r=r.apply(t,e||[])).next())}))},r=this&&this.__generator||function(t,e){var n,r,s,i,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(a){return function(u){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,a[0]&&(o=0)),o;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!((s=(s=o.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){o.label=a[1];break}if(6===a[0]&&o.label<s[1]){o.label=s[1],s=a;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(a);break}s[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}};Object.defineProperty(e,"__esModule",{value:!0}),e.ImageTool=void 0;var s=function(){function t(){}return t.prototype.imageToBlob=function(t,e,s,i){var o=this;return void 0===e&&(e=300),void 0===s&&(s=300),void 0===i&&(i=!0),new Promise((function(a){try{if(!t)return a(null);var u=URL.createObjectURL(t),c=new Image;c.onload=function(){return n(o,void 0,void 0,(function(){var t,n,o,d,l,p,h,f;return r(this,(function(r){switch(r.label){case 0:return t=c.width,n=c.height,o=document.createElement("canvas"),d=o.getContext("2d"),(p=i)?t<n?[4,this.resizeHeight(c,t,n)]:[3,2]:[3,7];case 1:return h=r.sent(),[3,6];case 2:return t>n?[4,this.resizeWidth(c,t,n)]:[3,4];case 3:return f=r.sent(),[3,5];case 4:f=c,r.label=5;case 5:h=f,r.label=6;case 6:p=h,r.label=7;case 7:return l=p||c,d.canvas.width=e,d.canvas.height=s,d.drawImage(l,0,0,e,s),d.canvas.toBlob((function(t){URL.revokeObjectURL(u),a(t)}),"image/jpeg",1),[2]}}))}))},c.crossOrigin="Anonymous",c.src=u}catch(t){a(null)}}))},t.prototype.imageToBlobWhithoutResize=function(t){var e=this;return new Promise((function(s){try{if(!t)return s(null);var i=URL.createObjectURL(t),o=new Image;o.onload=function(){return n(e,void 0,void 0,(function(){var t,e,n,a;return r(this,(function(r){return t=o.width,e=o.height,n=document.createElement("canvas"),(a=n.getContext("2d")).canvas.width=t,a.canvas.height=e,a.drawImage(o,0,0,t,e),a.canvas.toBlob((function(t){URL.revokeObjectURL(i),s(t)}),"image/jpeg",.9),[2]}))}))},o.crossOrigin="Anonymous",o.src=i}catch(t){s(null)}}))},t.prototype.resizeHeight=function(t,e,n){return new Promise((function(r){var s=document.createElement("canvas").getContext("2d");s.canvas.width=e,s.canvas.height=e,s.drawImage(t,0,.2*n,e,e,0,0,e,e);var i=new Image;i.onload=function(){return r(i)},i.src=s.canvas.toDataURL()}))},t.prototype.resizeWidth=function(t,e,n){return new Promise((function(r){var s=document.createElement("canvas").getContext("2d");s.canvas.width=n,s.canvas.height=n,s.drawImage(t,.2*e,0,n,n,0,0,n,n);var i=new Image;i.onload=function(){return r(i)},i.src=s.canvas.toDataURL()}))},t}();e.ImageTool=s},431:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ProgressIndicatorTool=void 0;var r=n(834),s=function(){function t(){this.className={container:"progress-indicator-container",background:"progress-indicator-background",indicator:"progress-indicator",indicator2:"progress-indicator-2"},this.indicator=null}return t.prototype.generate=function(){if(!this.indicator){var t=document.createElement("div"),e=document.createElement("div"),n=document.createElement("div"),r=document.createElement("div");t.classList.add(this.className.container),e.classList.add(this.className.background),n.classList.add(this.className.indicator),r.classList.add(this.className.indicator2),e.append(n,r),t.appendChild(e),this.indicator=t}},t.prototype.generateAndShow=function(){this.generate(),this.show()},t.prototype.show=function(){this.indicator&&r.WWWROOT.appendChild(this.indicator)},t.prototype.hidden=function(){var t=this;this.indicator&&setTimeout((function(){return t.indicator.remove()}),400)},t.prototype.destroyInstance=function(){this.indicator&&(this.indicator.remove(),this.indicator=null)},t}();e.ProgressIndicatorTool=s},593:function(t,e,n){var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(s,i){function o(t){try{u(r.next(t))}catch(t){i(t)}}function a(t){try{u(r.throw(t))}catch(t){i(t)}}function u(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,a)}u((r=r.apply(t,e||[])).next())}))},s=this&&this.__generator||function(t,e){var n,r,s,i,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(a){return function(u){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,a[0]&&(o=0)),o;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!((s=(s=o.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){o.label=a[1];break}if(6===a[0]&&o.label<s[1]){o.label=s[1],s=a;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(a);break}s[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}};Object.defineProperty(e,"__esModule",{value:!0}),e.RestApiTool=void 0;var i=n(646),o=function(){function t(){this.base="/api"}return t.prototype.generateBase=function(t){var e=new Headers,n=this.recoveryToken();return n&&e.set("Authorization","Bearer ".concat(n)),{URL:this.base.concat(t.startsWith("/")?t:"/".concat(t)),headers:e}},t.prototype.post=function(t,e,n){return r(this,void 0,void 0,(function(){var r,i;return s(this,(function(s){return r=this.recoveryToken(),i=new Headers,n&&n.forEach((function(t,e){return i.set(e,t)})),i.has("Content-Type")||i.append("Content-Type","application/json"),r&&i.set("Authorization","Bearer ".concat(r)),[2,fetch(this.base.concat("/"===t[0]?t:"/"+t),{body:e instanceof FormData||"string"==typeof e?e:JSON.stringify(e),headers:i,method:"POST"})]}))}))},t.prototype.patch=function(t,e,n){return r(this,void 0,void 0,(function(){var r,i;return s(this,(function(s){return r=this.recoveryToken(),i=new Headers,n&&n.forEach((function(t,e){return i.set(e,t)})),i.has("Content-Type")||i.append("Content-Type","application/json"),r&&i.set("Authorization","Bearer ".concat(r)),[2,fetch(this.base.concat("/"===t[0]?t:"/"+t),{body:e instanceof FormData||"string"==typeof e?e:JSON.stringify(e),headers:i,method:"PATCH"})]}))}))},t.prototype.put=function(t,e,n){return r(this,void 0,void 0,(function(){var r,i;return s(this,(function(s){return r=this.recoveryToken(),i=new Headers,n&&n.forEach((function(t,e){return i.set(e,t)})),i.has("Content-Type")||i.append("Content-Type","application/json"),r&&i.set("Authorization","Bearer ".concat(r)),[2,fetch(this.base.concat("/"===t[0]?t:"/"+t),{body:e instanceof FormData||"string"==typeof e?e:JSON.stringify(e),headers:i,method:"PUT"})]}))}))},t.prototype.delete=function(t,e){return r(this,void 0,void 0,(function(){var n,r;return s(this,(function(s){return n=this.recoveryToken(),r=new Headers,e&&e.forEach((function(t,e){return r.set(e,t)})),r.has("Content-Type")||r.append("Content-Type","application/json"),n&&r.set("Authorization","Bearer ".concat(n)),[2,fetch(this.base.concat("/"===t[0]?t:"/"+t),{headers:r,method:"DELETE"})]}))}))},t.prototype.signOut=function(){return r(this,void 0,void 0,(function(){return s(this,(function(t){switch(t.label){case 0:return[4,this.delete("/session/sign-out")];case 1:return[2,200===t.sent().status]}}))}))},t.prototype.recoveryToken=function(){try{return localStorage.getItem(i.SYSTEM_STORAGE_KEY_TOKEN)}catch(t){return null}},t.updateToken=function(t){t?localStorage.setItem(i.SYSTEM_STORAGE_KEY_TOKEN,t):console.error("TOKEN_INVALID")},t}();e.RestApiTool=o},339:function(t,e,n){var r=this&&this.__rest||function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]])}return n};Object.defineProperty(e,"__esModule",{value:!0}),e.ToasterTool=void 0;var s=n(484),i=n(834),o="toaster-container",a={success:"bi-check2-circle",info:"bi-info-circle",danger:"bi-exclamation-diamond",warn:"bi-question-diamond"},u=function(){function t(){}return t.prototype.success=function(e,n,r){if(void 0===e&&(e=":)"),void 0===r&&(r=t.DEFAULT_TIMER),document.getElementById(o))this.toStack(e,r,n,"success");else{var s=this.generateBase(e,"success",r,n),i=s.container,a=s.containerActive,u=s.message,c=s.headerIcon;i.style.background="var(--success)",u.style.color="var(--textWarn)",u.style.fontWeight="500",c.style.color="var(--textWarn)",a.style.borderColor="var(--textSecondary)",this.toWWWROOT(i)}},t.prototype.info=function(e,n,r){if(void 0===r&&(r=t.DEFAULT_TIMER),document.getElementById(o))this.toStack(e,r,n,"info");else{var s=this.generateBase(e,"info",r,n).container;this.toWWWROOT(s)}},t.prototype.warn=function(e,n,r){if(void 0===e&&(e="Oopsss..."),void 0===r&&(r=t.DEFAULT_TIMER),document.getElementById(o))this.toStack(e,r,n,"warn");else{var s=this.generateBase(e,"warn",r,n),i=s.container,a=s.containerActive,u=s.message,c=s.headerIcon;i.style.background="var(--warn)",u.style.color="var(--textWarn)",u.style.fontWeight="500",c.style.color="var(--textWarn)",a.style.borderColor="var(--textSecondary)",this.toWWWROOT(i)}},t.prototype.danger=function(e,n,r){if(void 0===e&&(e="Oopsss..."),void 0===r&&(r=t.DEFAULT_TIMER),document.getElementById(o))this.toStack(e,r,n,"danger");else{var s=this.generateBase(e,"danger",r,n),i=s.container,a=s.containerActive;i.style.background="var(--danger)",a.style.borderColor="var(--textSecondary)",this.toWWWROOT(i)}},t.prototype.toStack=function(e,n,r,s){t.stack.push({message:e,timer:n,type:s,onDestroy:r}),setTimeout((function(){return document.getElementById(o).click()}),10)},t.prototype.toWWWROOT=function(t){i.WWWROOT.appendChild(t),setTimeout((function(){t.style.transform="scale(1.05)",setTimeout((function(){return t.style.transform=""}),s.CSS_DEFAULT_TRANSITION_TIME)}),100)},t.prototype.generateBase=function(e,n,i,u){var c=document.createElement("div"),d=document.createElement("div"),l=document.createElement("header"),p=document.createElement("div"),h=document.createElement("p"),f=document.createElement("i");c.id=o,d.id="toaster-container-active",l.id="toaster-header",p.id="toaster-header-part",h.id="toaster-message",f.classList.add("bi",a[n]),c.style.transform="scale(0)",c.style.transition="all ".concat(s.CSS_DEFAULT_TRANSITION_TIME-100,"ms ease-in-out"),h.textContent=e||"",p.append(f,h),l.append(p);var m=document.createElement("style");m.innerHTML="\n      .class-anim-toaster-container-active {\n        animation: anim-toaster-container-active ".concat(i,"ms ease-out;\n      }\n\n      @keyframes anim-toaster-container-active {\n        to {\n          transform: translateX(-100%);\n        }\n      }\n    "),d.classList.add("class-anim-toaster-container-active"),document.head.appendChild(m),c.append(d,l);var v=this,S=function(){m.remove(),c.style.transform="scale(0)",setTimeout((function(){if(c.remove(),u&&"function"==typeof u&&u(),t.stack.length>0){var e=t.stack.shift(),n=e.type,s=r(e,["type"]);v[n](s.message,s.onDestroy,s.timer)}}),s.CSS_DEFAULT_TRANSITION_TIME-150)},g=setTimeout((function(){return S()}),i),y=setTimeout((function(){d.remove()}),i-100);return c.addEventListener("click",(function(){clearTimeout(g),clearTimeout(y),S()})),{container:c,containerActive:d,header:l,headerIcon:f,message:h,destroy:S}},t.DEFAULT_TIMER=6e3,t.stack=[],t}();e.ToasterTool=u},499:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.NewQuizFormValidation=void 0;var n=function(){function t(){}return t.prototype.titleIsValid=function(e){return e.length>=5&&e.length<=t.FIELD_MAX_LENGTH},t.FIELD_MAX_LENGTH=100,t}();e.NewQuizFormValidation=n},578:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.UserEntityValidation=void 0;var n=function(){function t(){this.emailRegex=/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/}return t.prototype.emailIsValid=function(t){return t&&this.emailRegex.test(t)},t.prototype.passwordIsValid=function(t){return t&&t.length>=8},t.prototype.nameIsValid=function(t){return t&&t.length>=2},t}();e.UserEntityValidation=n}},s={};function i(t){var e=s[t];if(void 0!==e)return e.exports;var n=s[t]={exports:{}};return r[t].call(n.exports,n,n.exports,i),n.exports}t=i(349),e=i(266),n=i(251),function(){function r(){}return r.prototype.run=function(){var r=document.querySelector("#input-f-html-page-name");if(!r)return console.error("Input HTML page name not found - 404");if(!r.dataset.page)return console.error("Input HTML data page not defined - 400");switch(r.dataset.page){case"INDEX_PAGE":case"USER_PAGE":case"NEW_QUIZ_PAGE":(new n.SessionModule).run();break;case"USER_PAGE_LOGGED_IN":(new t.LoggedUserPageModule).run();break;case"NEW_QUIZ_PAGE_LOGGED_IN":(new e.NewQuizFormModule).run()}this.preventAvatarCache()},r.prototype.preventAvatarCache=function(){document.querySelectorAll("img").forEach((function(t){t.src.includes("/avatar/")&&!t.src.includes("?query")&&console.error("Avatar IMG needs the query in its URL",t)}))},r.build=function(){return new r},r}().build().run()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,